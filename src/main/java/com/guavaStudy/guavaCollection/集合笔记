关联可变集合和不可变集合：
可变集合接口	             属于JDK还是Guava	        不可变版本
Collection	                JDK	             ImmutableCollection
List	                    JDK	             ImmutableList
Set	                        JDK	             ImmutableSet
SortedSet/NavigableSet	    JDK	             ImmutableSortedSet
Map	                        JDK	             ImmutableMap
SortedMap	                JDK	             ImmutableSortedMap

Multiset	                Guava	         ImmutableMultiset
SortedMultiset	            Guava	         ImmutableSortedMultiset
Multimap	                Guava	         ImmutableMultimap
ListMultimap	            Guava	         ImmutableListMultimap
SetMultimap	                Guava	         ImmutableSetMultimap
BiMap	                    Guava	         ImmutableBiMap
ClassToInstanceMap	        Guava	         ImmutableClassToInstanceMap
Table	                    Guava	         ImmutableTable

创建对象的不可变拷贝是一项很好的防御性编程技巧。Guava 为所有 JDK 标准集合类型和 Guava 新集合类型
都提供了简单易用的不可变版本。

JDK 也提供了 Collections.unmodifiableXXX 方法把集合包装为不可变形式，但我们认为不够好：
• 笨重而且累赘：不能舒适地用在所有想做防御性拷贝的场景；
• 不安全：要保证没人通过原集合的引用进行修改，返回的集合才是事实上不可变的；
• 低效：包装过的集合仍然保有可变集合的开销，比如并发修改的检查、散列表的额外空间，等等。

如果你没有修改某个集合的需求，或者希望某个集合保持不变时，把它防御性地拷贝到不可变集合是个很好的实践。

重要提示：所有 Guava 不可变集合的实现都不接受 null 值。我们对 Google 内部的代码库做过详细研究，发现
只有 5%的情况需要在集合中允许 null 元素，剩下的 95%场景都是遇到 null 值就快速失败。如果你需要在不可
变集合中使用 null，请使用 JDK 中的 Collections.unmodifiableXXX 方法。更多细节建议请参考“使用和避免
null”。

